/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { FlightBooking, FlightBookingInterface } from "../FlightBooking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "flightId",
        type: "string",
      },
    ],
    name: "BookingConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "flightId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "passenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "BookingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "passenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "PointsEarned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "bookings",
    outputs: [
      {
        internalType: "address",
        name: "passenger",
        type: "address",
      },
      {
        internalType: "string",
        name: "flightId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isConfirmed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "flightId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createBooking",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "flightId",
        type: "string",
      },
    ],
    name: "getBooking",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "passenger",
            type: "address",
          },
          {
            internalType: "string",
            name: "flightId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isConfirmed",
            type: "bool",
          },
        ],
        internalType: "struct FlightBooking.Booking",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "passenger",
        type: "address",
      },
    ],
    name: "getLoyaltyPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "loyaltyPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061118a806100206000396000f3fe60806040526004361061004a5760003560e01c8063502bf35e1461004f5780639624493f14610090578063b689a930146100cd578063d04c9115146100e9578063d45e425914610126575b600080fd5b34801561005b57600080fd5b506100766004803603810190610071919061087f565b610163565b6040516100879594939291906109bc565b60405180910390f35b34801561009c57600080fd5b506100b760048036038101906100b2919061087f565b610264565b6040516100c49190610b03565b60405180910390f35b6100e760048036038101906100e29190610b51565b6103b3565b005b3480156100f557600080fd5b50610110600480360381019061010b9190610bd9565b61067d565b60405161011d9190610c06565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190610bd9565b6106c6565b60405161015a9190610c06565b60405180910390f35b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546101c290610c50565b80601f01602080910402602001604051908101604052809291908181526020018280546101ee90610c50565b801561023b5780601f106102105761010080835404028352916020019161023b565b820191906000526020600020905b81548152906001019060200180831161021e57829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900460ff16905085565b61026c6106de565b60008260405161027c9190610cbd565b90815260200160405180910390206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546102fb90610c50565b80601f016020809104026020016040519081016040528092919081815260200182805461032790610c50565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250509050919050565b8034146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610d20565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008360405161041d9190610cbd565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90610d8c565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001428152602001600115158152506000836040516104f59190610cbd565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161055f9190610f58565b50604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050506000662386f26fc10000826105ac9190611088565b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fd91906110b9565b925050819055507f334c06f5c8aa567850bfd3ab87676e4c43e308428447be3d2fdbde30b080750b833384604051610637939291906110ed565b60405180910390a17f2c4c0dc427a50c4a69d2fc184c47a311acf950d8d2f289fbaee64e83e9b28967338260405161067092919061112b565b60405180910390a1505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60016020528060005260406000206000915090505481565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61078c82610743565b810181811067ffffffffffffffff821117156107ab576107aa610754565b5b80604052505050565b60006107be610725565b90506107ca8282610783565b919050565b600067ffffffffffffffff8211156107ea576107e9610754565b5b6107f382610743565b9050602081019050919050565b82818337600083830152505050565b600061082261081d846107cf565b6107b4565b90508281526020810184848401111561083e5761083d61073e565b5b610849848285610800565b509392505050565b600082601f83011261086657610865610739565b5b813561087684826020860161080f565b91505092915050565b6000602082840312156108955761089461072f565b5b600082013567ffffffffffffffff8111156108b3576108b2610734565b5b6108bf84828501610851565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108f3826108c8565b9050919050565b610903816108e8565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610943578082015181840152602081019050610928565b60008484015250505050565b600061095a82610909565b6109648185610914565b9350610974818560208601610925565b61097d81610743565b840191505092915050565b6000819050919050565b61099b81610988565b82525050565b60008115159050919050565b6109b6816109a1565b82525050565b600060a0820190506109d160008301886108fa565b81810360208301526109e3818761094f565b90506109f26040830186610992565b6109ff6060830185610992565b610a0c60808301846109ad565b9695505050505050565b610a1f816108e8565b82525050565b600082825260208201905092915050565b6000610a4182610909565b610a4b8185610a25565b9350610a5b818560208601610925565b610a6481610743565b840191505092915050565b610a7881610988565b82525050565b610a87816109a1565b82525050565b600060a083016000830151610aa56000860182610a16565b5060208301518482036020860152610abd8282610a36565b9150506040830151610ad26040860182610a6f565b506060830151610ae56060860182610a6f565b506080830151610af86080860182610a7e565b508091505092915050565b60006020820190508181036000830152610b1d8184610a8d565b905092915050565b610b2e81610988565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b60008060408385031215610b6857610b6761072f565b5b600083013567ffffffffffffffff811115610b8657610b85610734565b5b610b9285828601610851565b9250506020610ba385828601610b3c565b9150509250929050565b610bb6816108e8565b8114610bc157600080fd5b50565b600081359050610bd381610bad565b92915050565b600060208284031215610bef57610bee61072f565b5b6000610bfd84828501610bc4565b91505092915050565b6000602082019050610c1b6000830184610992565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c6857607f821691505b602082108103610c7b57610c7a610c21565b5b50919050565b600081905092915050565b6000610c9782610909565b610ca18185610c81565b9350610cb1818560208601610925565b80840191505092915050565b6000610cc98284610c8c565b915081905092915050565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b6000610d0a601883610914565b9150610d1582610cd4565b602082019050919050565b60006020820190508181036000830152610d3981610cfd565b9050919050565b7f466c6967687420616c726561647920626f6f6b65640000000000000000000000600082015250565b6000610d76601583610914565b9150610d8182610d40565b602082019050919050565b60006020820190508181036000830152610da581610d69565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e0e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610dd1565b610e188683610dd1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610e55610e50610e4b84610988565b610e30565b610988565b9050919050565b6000819050919050565b610e6f83610e3a565b610e83610e7b82610e5c565b848454610dde565b825550505050565b600090565b610e98610e8b565b610ea3818484610e66565b505050565b5b81811015610ec757610ebc600082610e90565b600181019050610ea9565b5050565b601f821115610f0c57610edd81610dac565b610ee684610dc1565b81016020851015610ef5578190505b610f09610f0185610dc1565b830182610ea8565b50505b505050565b600082821c905092915050565b6000610f2f60001984600802610f11565b1980831691505092915050565b6000610f488383610f1e565b9150826002028217905092915050565b610f6182610909565b67ffffffffffffffff811115610f7a57610f79610754565b5b610f848254610c50565b610f8f828285610ecb565b600060209050601f831160018114610fc25760008415610fb0578287015190505b610fba8582610f3c565b865550611022565b601f198416610fd086610dac565b60005b82811015610ff857848901518255600182019150602085019450602081019050610fd3565b868310156110155784890151611011601f891682610f1e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061109382610988565b915061109e83610988565b9250826110ae576110ad61102a565b5b828204905092915050565b60006110c482610988565b91506110cf83610988565b92508282019050808211156110e7576110e6611059565b5b92915050565b60006060820190508181036000830152611107818661094f565b905061111660208301856108fa565b6111236040830184610992565b949350505050565b600060408201905061114060008301856108fa565b61114d6020830184610992565b939250505056fea264697066735822122028aa5f3c0a4fb6aef1b8b96f72fa927cf3a5c1fc12c9c389b6e8946451ace47f64736f6c63430008140033";

type FlightBookingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlightBookingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlightBooking__factory extends ContractFactory {
  constructor(...args: FlightBookingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FlightBooking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlightBooking__factory {
    return super.connect(runner) as FlightBooking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlightBookingInterface {
    return new Interface(_abi) as FlightBookingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlightBooking {
    return new Contract(address, _abi, runner) as unknown as FlightBooking;
  }
}
